@font-face {
  font-family: 'Noto Sans';
  font-style: normal;
  font-weight: 400 500 700;
  font-stretch: 100%;
  font-display: swap;
  src: url('assets/fonts/NotoSans-VariableFont_wdth\,wght.ttf') format('truetype');
}


:root {
    --heading-font-color: hsl(227, 75%, 14%);
    --neutral800: hsl(226, 25%, 17%);
    --neutral700: hsl(225, 23%, 24%); 
    --font-color: hsl(226, 11%, 37%);
    --button-border-color: hsl(0, 0%, 78%);
    --neutral200: hsl(217, 61%, 90%);
    --neutral100: hsl(0, 0%, 93%);
    --background-color: hsl(200, 60%, 99%);

    --red400: hsl(3, 86%, 64%);
    --red500: hsl(3, 71%, 56%);
    --red700: hsl(3, 77%, 44%);

    --body-background: linear-gradient(180deg, #EBF2FC 0%, #EEF8F9 100%);
    --dark-gradient: linear-gradient(180deg, #040918 0%, #091540 100%);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Noto Sans', sans-serif;
    background: var(--body-background);
    color: var(--font-color);
    font-size: 1rem;
    margin: 0 auto; 
    
}

main {
    width: 90%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 2em 0;
}

body {
    display: flex;
    flex-direction: column;
    align-items: center;
}

header {
    width: 100%;
    max-width: 1200px;
    display: flex;
    justify-content: space-between;
    background-color: var(--background-color);
    margin-top:1em;
    padding: 1em;
    border-radius: 8px; 
}

.toggle-button {
    border: none;
    height: 50px;
    width: 50px;
    cursor: pointer;
}

.toggle-icon {
   height: 30px;
}

.filter-container {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    gap: 1em;
    padding-top:1em;
    padding-bottom: 1em;
}

h1 {
    font-weight: 500;
    color: var(--heading-font-color);
    text-align: center;
}

h2 {
    font-weight: 500;
    color: var(--heading-font-color);
    font-size: 1.2rem;
    margin-bottom: 0.2em;
    font-weight: 700;
}

.filter-options {
    text-align: center;
}

.filter-options button {
    border-radius: 8px;
    padding: 6px 2px;
    font-size: 1rem;
    cursor: pointer;
    margin-left: 0.5em;
    border-radius: 20px;
    background-color: var(--background-color);
    border:none;
}

.filter-options button:nth-child(1) {
    width: 2.5rem; 
}

.filter-options button:nth-child(2) {
    width: 4rem; 
}

.filter-options button:nth-child(3) {
    width: 5rem; 
}


.filter-options button.active {
    background-color: var(--red700);
    color: white;
}

.extensions {
    display: grid;
    flex-direction: column;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1em;
    padding-top: 1em;   
}

.extension {
    background-color: var(--background-color);
    border-radius: 8px;
    padding: 1em;
    display: flex;
    flex-direction: column;
    gap: 1em;
}

.content-extension {
    display: flex;
    flex-direction: row;
    gap: 1em;
    align-items: self-start;
    margin-bottom: 1em;
}

.extension-icon {
  width: 50px;
  height: auto;
  border-radius: 8px;
  padding-top: 5px;
}


.remove-button {
  background-color: var(--background-color);
  color: var(--font-color);
  border-radius: 20px;
  padding: 0.5em 1em;
  font-size: 1rem;
  font-weight: 500;
  color: var(--heading-font-color);
  cursor: pointer;
  max-width:fit-content;
  border: 1px solid var(--button-border-color);
}

.status {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
}

input:where([type="checkbox"][role="switch"]) {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  position: relative;
  font-size: inherit;
  width: 2em;
  height: 1em;
  box-sizing: content-box;
  border: 1px solid var(--neutral200);
  border-radius: 1em;
  vertical-align: text-bottom;
  background: var(--neutral200);
}

input:where([type="checkbox"][role="switch"])::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 0;
  transform: translate(0, -50%);
  box-sizing: border-box;
  width: 0.7em;
  height: 0.7em;
  margin: 0 0.15em;
  border: 1px solid var(--neutral200);
  border-radius: 50%;
  background: var(--background-color);
}

input:where([type="checkbox"][role="switch"]):checked::before {
  left: 1em;
}

input:where([type="checkbox"][role="switch"]):checked {
  background-color: var(--red700);
  border-color: var(--red700);
}